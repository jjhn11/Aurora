services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "5173:5173"
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /etc/letsencrypt/live/auroramexicali.com:/etc/letsencrypt/live/auroramexicali.com:ro
      - /etc/letsencrypt/archive/auroramexicali.com:/etc/letsencrypt/archive/auroramexicali.com:ro
      - /etc/letsencrypt/privkey.pem:/etc/letsencrypt/privkey.pem:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=rootpassword
      - DB_NAME=AuroraV2
    env_file:
      - ./backend/src/prod.env

    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/cert:/cert:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: always
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=AuroraV2
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: